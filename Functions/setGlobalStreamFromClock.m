function [ randomSeed, oldStream ] = setGlobalStreamFromClock(randomSeed, thisType)
%SETGLOBALSTREAMFROMCLOCK Sets global randomisation stream from the clock.
%   In experiments, we might start by resetting the global randomisation
%   stream so that the pseudo-random numbers generated by MATLAB can be
%   recreated later by setting the same random seed. Resetting from the
%   clock is a simple way to ensure that each participant has a different
%   seed.
%
%   SETGLOBALSTREAMFROMCLOCK simply sets the stream from the clock.
%
%   randomSeed = SETGLOBALSTREAMFROMCLOCK sets the stream from the clock
%   and returns the random seed.
%
%   [randomSeed, oldStream] = SETGLOBALSTREAMFROMCLOCK optionally also
%   returns the properties of the current stream, in case you want to 
%   restore it when you're done, using the command
%   RandStream.setGlobalStream(oldStream).
%
%   SETGLOBALSTREAMFROMCLOCK(randomSeed) allows you to specify the seed
%   to use. This might be useful if you want to recreate an experiment.
%
%   SETGLOBALSTREAMFROMCLOCK(..., thisType) allows you to specify the generator
%   algorithm. Defaults to Mersenne twister, which is the MATLAB default.
%   For a list of possibilities, type RandStream.list.

    if nargin == 0
        randomSeed = [];
    end
    
    if nargin <= 1
        thisType = 'mt19937ar';
    end
    
    if isempty(randomSeed)
        randomSeed = sum(100*clock);                                % Get random seed from clock and store
    end
    
    oldStream = RandStream.getGlobalStream;                         % Get properties of the current stream
    thisStream = RandStream.create(thisType, 'seed', randomSeed);   % Make randomisation stream
    RandStream.setGlobalStream(thisStream);                         % Set as global randomisation stream

end

